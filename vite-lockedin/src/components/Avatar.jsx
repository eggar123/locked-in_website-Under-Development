/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from "react";
import { useAnimations, useFBX, useGLTF} from "@react-three/drei";


export function Avatar(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF("models/prod.kea.avatar.glb");
  const {animations: standingAnimation} = useFBX("animations/Sitting.fbx")
  const [hovered, setHovered] = useState(false)

  
  standingAnimation[0].name = "Standing";
  const {actions} = useAnimations(standingAnimation, group)

  
  
useEffect(()=>{
  actions["Standing"].reset().play()
}, []);

useEffect(() => {
  document.body.style.cursor = hovered ? 'pointer' : 'auto'
  return () => document.body.style.cursor = 'auto';
}, [hovered])




  return (
    
    <group {...props} ref={group} dispose={null}>
    <group 



onClick={(e) => {

  console.log("trykk");
  
}}
    //          Y   Z    X
    position={[-1, -3, -44]}
    rotation-x={-Math.PI / 2} 
    
    rotation={[-Math.PI / 2, 0, -1.8]}
    scale={9}>
   
      <primitive object={nodes.Hips} />
      <skinnedMesh
       onPointerOver={() => setHovered(true)}
       onPointerOut={() => setHovered(false)}
        name="EyeLeft"
        geometry={nodes.EyeLeft.geometry}
        material={materials.Wolf3D_Eye}
        skeleton={nodes.EyeLeft.skeleton}
        morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
        morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
      />
      
      <skinnedMesh
        onPointerOver={() => setHovered(true)}
        onPointerOut={() => setHovered(false)}
        name="EyeRight"
        geometry={nodes.EyeRight.geometry}
        material={materials.Wolf3D_Eye}
        skeleton={nodes.EyeRight.skeleton}
        morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
        morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
      />
      <skinnedMesh
          onPointerOver={() => setHovered(true)}
          onPointerOut={() => setHovered(false)}
       
        name="Wolf3D_Head"
        geometry={nodes.Wolf3D_Head.geometry}
        material={materials.Wolf3D_Skin}
        skeleton={nodes.Wolf3D_Head.skeleton}
        morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
      />
      <skinnedMesh
        onPointerOver={() => setHovered(true)}
        onPointerOut={() => setHovered(false)}
        name="Wolf3D_Teeth"
        geometry={nodes.Wolf3D_Teeth.geometry}
        material={materials.Wolf3D_Teeth}
        skeleton={nodes.Wolf3D_Teeth.skeleton}
        morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
      />
      <skinnedMesh
        onPointerOver={() => setHovered(true)}
        onPointerOut={() => setHovered(false)}
        geometry={nodes.Wolf3D_Body.geometry}
        material={materials.Wolf3D_Body}
        skeleton={nodes.Wolf3D_Body.skeleton}
      />
      <skinnedMesh
        onPointerOver={() => setHovered(true)}
        onPointerOut={() => setHovered(false)}
        geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
        material={materials.Wolf3D_Outfit_Bottom}
        skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
      />
      <skinnedMesh
        onPointerOver={() => setHovered(true)}
        onPointerOut={() => setHovered(false)}
        geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
        material={materials.Wolf3D_Outfit_Footwear}
        skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
      />
      <skinnedMesh
        onPointerOver={() => setHovered(true)}
        onPointerOut={() => setHovered(false)}
        geometry={nodes.Wolf3D_Outfit_Top.geometry}
        material={materials.Wolf3D_Outfit_Top}
        skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
      />
      <skinnedMesh
        onPointerOver={() => setHovered(true)}
        onPointerOut={() => setHovered(false)}
        geometry={nodes.Wolf3D_Glasses.geometry}
        material={materials.Wolf3D_Glasses}
        skeleton={nodes.Wolf3D_Glasses.skeleton}
      />
      <skinnedMesh
        onPointerOver={() => setHovered(true)}
        onPointerOut={() => setHovered(false)}
        geometry={nodes.Wolf3D_Headwear.geometry}
        material={materials.Wolf3D_Headwear}
        skeleton={nodes.Wolf3D_Headwear.skeleton}
      />
    </group>
    </group>
  );
}


useGLTF.preload("models/prod.kea.avatar.glb");